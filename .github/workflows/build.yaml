name: Build Docker Image
on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  UPSTREAM_REPO: "tdlib/telegram-bot-api"
  UPSTREAM_BRANCH: "master"

jobs:
  check_and_build:
    name: Build and Push Docker image
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get stored commit
        id: get-stored-commit
        run: |
          if [ -f .upstream ]; then
            echo "sha=$(cat .last-commit)" >> $GITHUB_OUTPUT
          else
            echo "sha=none" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-config-inline: |
            [worker.oci]
            max-parallelism = 4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Retrieve author data
        run: |
          echo AUTHOR=$(curl -sSL ${{ github.event.repository.owner.url }} | jq -r '.name') >> $GITHUB_ENV

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.get-stored-commit.outputs.sha }}
          labels: |
            org.opencontainers.image.authors=${{ env.AUTHOR }}

      - name: Build container image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-contexts: |
            src=https://github.com/${{ env.UPSTREAM_REPO }}.git#${{ steps.get-stored-commit.outputs.sha }}
          build-args: |
            UPSTREAM_COMMIT=${{ steps.get-stored-commit.outputs.sha }}
